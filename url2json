#!/bin/bash
#
# Usage: url2json [-ahsu] [<bandcamp-url>]
#
#Parse given bandcamp url and print the resulting json. By default,
#it outputs an indented/prettified json string which is used by the tests.
#Use
#
#-a to show all fields,
#-h (human) to include colors and to page it
#-s to save the initial Bandcamp JSON to ./jsons folder in the repo root
#-u to update the json data in ./tests/json.
#Ensure you have curl, jq and git on your system.
#
# Examples
# · Save output to a file
#    url2json https://hello.bandcamp.com/album/hi > ./tests/json/testcase.json
#
# · Include all fields and open with jq and less
#    url2json -a -h https://hello.bandcamp.com/album/hi
#
# · Update all json test cases
#    url2json -u
#

ALL_FIELDS=0
HUMAN=0
UPDATE=0
SAVE=0

get_json() {
  jqargs=(--sort-keys)
  ((ALL_FIELDS)) || jqargs+=('del(.comment, .sponsor, .albumRelease[0].offers)')

  curl -sL "${1//[\"\']/}" | sed 's/^[^{]*//; s/[^}]*$//; s/&quot;/"/g' | grep -E '\{.*(dateModif|action=gift)' | {
    if ((SAVE)); then
      url=$1
      save_path=$(realpath "$0")
      save_path=$(dirname "$save_path")
      save_path=$save_path/_jsons/${1//\//_}.json
      jq -cM >"$save_path"
      [[ -s $save_path ]] || {
        rm "$save_path"
        exit 1
      }
    elif ((HUMAN)); then
      jq -C "${jqargs[@]}" | less -R
    else
      jq "${jqargs[@]}"
    fi
  }
}

update_test_jsons() {
  files=(./tests/json/*.json)
  for file in "${files[@]}"; do
    url=$(jq -r '.["@id"]' "$file")
    printf '%-50s' "$file"
    get_json "$url" |
      jq 'del(
          (if .track then .track.itemListElement[].item else . end)
            | .additionalProperty[]
            | select(.name | test("mp3"))
        )' >"$file"
    if git diff --quiet "$file" &>/dev/null; then
      echo -e ' \e[1;32mNo changes\e[0m'
    else
      echo
      git diff -U0 --color-words='[^ ]|[0-9]+' "$file"
    fi
  done
  git diff --compact-summary "${files[@]}"
}

if [[ -z "$1" ]]; then
  sed -n '2,$s/^#/ /p' "$0"
else
  for arg in "$@"; do
    case $arg in
      -a) ALL_FIELDS=1 ;;
      -h) HUMAN=1 ;;
      -s) SAVE=1 ;;
      -u) UPDATE=1 ;;
      *) url=$arg ;;
    esac
  done
  if ((UPDATE)); then
    update_test_jsons
  else
    get_json "$url"
  fi
fi
