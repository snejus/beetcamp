#!/bin/zsh
# Run tests across all test files, and report what has changed in a pretty way.
# Test metadata files are stored in $TEST_FILES_DIR (./jsons) directory: those
# are JSON files that contain Bandcamp release metadata.
#
# You can use 'url2json -s <release-url>' to create such testing file for your
# release of choice.
# It extracts the relevant metadata saves it in './jsons' directory under
# the filename that resembles that release URL (where slashes are replaced by
# underscores).

TESTS_DIR=lib_tests
TEST_FILES_DIR=jsons

before=${1:?Previous revision required as 1st arg}
after=${2:?Current/target revision required as 2nd arg}

print >&2 "Base: $before, target: $after"

poe test-files --no-summary -n4 --base $before --target $after

jq '"\(.original_artist) -> \(.artist)"' -r $TESTS_DIR/$after/*.json >$TESTS_DIR/artist-$after

jq '"\(.original_name) -> \(.album // .title)"' -r $TESTS_DIR/$after/*.json >$TESTS_DIR/album-$after

jq '.catalognum // ""' -r $TESTS_DIR/$after/*.json >$TESTS_DIR/catalognum-$after

jq '(.tracks // [.])[] | if .track_alt then "\(.track_alt). " else "" end + "\(.artist) - \(.title)"' -r $TESTS_DIR/$after/*.json -r >$TESTS_DIR/tracks-$after

for type in album artist catalognum tracks; do
  git diff --unified=0 --no-index --color-words $TESTS_DIR/$type-$before $TESTS_DIR/$type-$after
done
